# Author : Enan Ajmain
# Email  : 3nan.ajmain@gmail.com
# Github : https://github.com/3N4N

# -- General -------------------------------------------------------------------

set -g escape-time 10           # wait 10ms after Esc key
set -g repeat-time 500          # wait 100ms for repeating command
set -g focus-events on
set -g set-clipboard off
set -g history-limit 5000

# set -g default-terminal "st-256color"
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ',xterm-256color*:Tc'
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

set -g set-titles on
set -g set-titles-string "#T"

# -- Display -------------------------------------------------------------------

set -g base-index 1             # start windows numbering at 1
set -g pane-base-index 1        # make pane numbering consistent with windows

set -g allow-rename off
set -g renumber-windows on      # re-number windows when a window is closed

set -g display-panes-time 800   # slightly longer pane indicators display time
set -g display-time 500         # slightly longer status messages display time

set -g status-interval 10       # redraw status line every 10 seconds

# Loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g monitor-activity off
set -g bell-action none

# -- Key Bindings --------------------------------------------------------------

# Set prefix
unbind C-b
set -g prefix C-Space

# Easy config reloads
unbind r
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Get into command mode easily
bind \; command-prompt

# Toggle mouse
set -g mouse off
bind m set -g mouse \; display 'Mouse #{?mouse,enabled,disabled}'

# Vim style mode
set -g mode-keys vi
set -g status-keys emacs
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
if-shell "cat /proc/version | grep -qEi '(Microsoft|WSL)'" " \
        bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'clip.exe'"

# Create session and window
bind C-c new-session
bind c new-window -c "#{pane_current_path}"

# Synchronize panes i.e. send same keycords to every panes in this window
bind S set synchronize-panes \; display 'Synchronization#{?pane_synchronized,on,off}'

# Don't display previous window/session name when renaming
bind , command-prompt -p "rename-window from '#W' to" "rename-window '%%'"
bind '$' command-prompt -p "rename-session from '#S' to" "rename-session '%%'"

# Session switcher
bind s choose-tree -s -Z -F '#{?pane_format,#{pane_current_command},\
    #{?window_format,#{window_name},#{?session_grouped,\
    (group #{session_group}: #{session_group_list}),}#{?session_attached,(attached),}}}'

# Window switcher
bind w choose-tree -w -Z -f '#{session_attached}' \
    -F '#{?pane_format,#{pane_current_command},\
    #{?window_format,#{window_name},#{?session_grouped,\
    (group #{session_group}: #{session_group_list}),}}}'

# Window and Session switching
unbind p
unbind n
bind -n M-h previous-window
bind -n M-l next-window
bind h switch-client -p
bind l switch-client -n
bind p last-window

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Pane splitting
bind v split-window -bh -c "#{pane_current_path}"
bind b split-window -bv -c "#{pane_current_path}"

# Movement of windows with prefix+</>
bind -r < swap-window -t -1 \; previous-window
bind -r > swap-window -t +1 \; next-window

# -- Vim Tmux Navigator --------------------------------------------------------

bind -n C-h run \
         "((tmux list-panes -F '#F' | grep -q Z && tmux send-keys C-h) || \
         ((tmux display-message -p '#{pane_current_command}' | grep -iq vim \
           && tmux send-keys C-h) || tmux select-pane -L ))"
bind -n C-j run \
         "((tmux list-panes -F '#F' | grep -q Z && tmux send-keys C-j) || \
         ((tmux display-message -p '#{pane_current_command}' | grep -iq vim \
           && tmux send-keys C-j) || tmux select-pane -D ))"
bind -n C-k run \
         "((tmux list-panes -F '#F' | grep -q Z && tmux send-keys C-k) || \
         ((tmux display-message -p '#{pane_current_command}' | grep -iq vim \
           && tmux send-keys C-k) || tmux select-pane -U ))"
bind -n C-l run \
         "((tmux list-panes -F '#F' | grep -q Z && tmux send-keys C-l) || \
         ((tmux display-message -p '#{pane_current_command}' | grep -iq vim \
           && tmux send-keys C-l) || tmux select-pane -R ))"
# bind -n C-\ select-pane -l

bind -T copy-mode-vi C-h run "(tmux list-panes -F '#F' | grep -q Z || tmux select-pane -L)"
bind -T copy-mode-vi C-j run "(tmux list-panes -F '#F' | grep -q Z || tmux select-pane -D)"
bind -T copy-mode-vi C-k run "(tmux list-panes -F '#F' | grep -q Z || tmux select-pane -U)"
bind -T copy-mode-vi C-l run "(tmux list-panes -F '#F' | grep -q Z || tmux select-pane -R)"
# bind -T copy-mode-vi C-\ select-pane -l

# Rebind shadowed keys in Bash
bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'
bind C-k send-keys 'C-k'
bind C-l send-keys 'C-l'

# -- Statusbar -----------------------------------------------------------------

# Declare variables for ease of use
col_bg="#EEE8D5"
col_fg="#657B83"
# col_bg="#272C33"
# col_fg="#DBDFE4"

set -g status-position top
set -g status-justify right
set -g status-bg $col_bg
set -g status-fg $col_fg
set -g status-left-length 50
set -g status-right-length 50

set -g window-status-current-format "#[fg=$col_bg]\
#{?window_zoomed_flag,#[bg=colour3],#[bg=colour4]} #I:#W "

set -g window-status-format "#{?window_last_flag,#[bg=default]#[fg=default],\
#[bg=default]#[fg=default]}#I:#W"

set -g status-left "#[bg=colour5]#[fg=$col_bg] #S #[bg=default]#[bg=$col_bg] \
#{?client_prefix,#[bg=colour1]#[fg=$col_bg],#[bg=default]#[fg=$col_bg]} \
PREFIX #{?client_prefix,#[bg=default],} "

set -g status-right "#[bg=$col_bg] #[bg=colour2]#[fg=$col_bg] %b %d %a \
#[bg=default] #[bg=colour5]#[fg=$col_bg] %H:%M "

set -g status-right ""
