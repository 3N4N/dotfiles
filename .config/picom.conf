# Author: Enan Ajmain
# Email : 3nan.ajmain@gmail.com
# Github: https://github.com/enanajmain

# -- Backend -------------------------------------------------------------------

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";

# -- VSync ---------------------------------------------------------------------

# Set VSync method. There are (up to) 5 VSync methods currently
# available:
#   none          = No VSync
#   drm           = VSync with DRM_IOCTL_WAIT_VBLANK.
#                   May only work on some (DRI-based) drivers.
#                   (DISABLED AT COMPILE TIME)
#   opengl        = Try to VSync with SGI_video_sync OpenGL extension.
#                   Only work on some drivers.
#   opengl-oml    = Try to VSync with OML_sync_control OpenGL extension.
#                   Only work on some drivers.
#   opengl-swc    = Enable driver-level VSync. Works only with GLX backend.
#   opengl-mswc   = Deprecated, use opengl-swc instead.
vsync = true;

# -- GLX backend ---------------------------------------------------------------

# GLX backend: Avoid using stencil buffer, useful if you donâ€™t have a stencil
# buffer. Might cause incorrect opacity when rendering transparent content (but
# never practically happened) and may not work with --blur-background. My tests
# show a 15% performance boost. Recommended.
glx-no-stencil = true;

# GLX backend: Avoid rebinding pixmap on window damage. Probably could improve
# performance on rapid window content changes, but is known to break things on
# some drivers (LLVMpipe, xf86-video-intel, etc.). Recommended if it works.
# glx-no-rebind-pixmap = true;

## DEPRECATED
# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
# glx-swap-method = "undefined";

# -- Shadows -------------------------------------------------------------------

# Enabled client-side shadows on windows.
shadow = false;

# Removed. Enabled by default in yshui's fork.
# clear-shadow = true;

# The blur radius for shadows. (default 12)
shadow-radius = 5;
# The left offset for shadows. (default -15)
shadow-offset-x = -5;
# The top offset for shadows. (default -15)
shadow-offset-y = -5;
# The translucency for shadows. (default .75)
shadow-opacity = 0.5;

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

# Do not paint shadows on shaped windows. Deprecated, use
# --shadow-exclude 'bounding_shaped' or
# --shadow-exclude 'bounding_shaped && !rounded_corners' instead.
# shadow-ignore-shaped = false;

# The shadow exclude options are helpful if you have shadows enabled. Due to
# the way compton draws its shadows, certain applications will have visual
# glitches (most applications are fine, only apps that do weird things with
# xshapes or argb are affected).  This list includes all the affected apps I
# found in my testing. The "! name~=''" part excludes shadows on any "Unknown"
# windows, this prevents a visual glitch with the XFWM alt tab switcher.
# shadow-exclude = [
#     "! name~=''",
#     "name = 'Notification'",
#     "name = 'Plank'",
#     "name = 'Docky'",
#     "name = 'Kupfer'",
#     "name = 'xfce4-notifyd'",
#     "name *= 'VLC'",
#     "name *= 'compton'",
#     "name *= 'Chromium'",
#     "name *= 'Chrome'",
#     "name *= 'Firefox'",
#     "class_g = 'Conky'",
#     "class_g = 'Kupfer'",
#     "class_g = 'Synapse'",
#     "class_g ?= 'Notify-osd'",
#     "class_g ?= 'Cairo-dock'",
#     "class_g ?= 'Xfce4-notifyd'",
#     "class_g ?= 'Xfce4-power-manager'"
# ];

# -- Opacity -------------------------------------------------------------------

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
inactive-opacity = 1;
# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1;
# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
frame-opacity = 1;
# Inactive opacity set by -i overrides value of _NET_WM_OPACITY.
inactive-opacity-override = false;
# opacity-rule = [ "90:class_g = 'st-256color'" ];

# Dim inactive windows. (0.0 - 1.0)
# inactive-dim = 0.2;
# Use fixed inactive dim value
# inactive-dim-fixed = true;

# Blur background of semi-transparent / ARGB windows. Bad in performance.
# The switch name may change without prior notifications.
# blur-background = true;
# Blur background of windows when the window frame is not opaque.
# Implies --blur-background. Bad in performance. The switch name may change.
# blur-background-frame = true;
# Use fixed blur strength instead of adjusting according to window opacity.
# blur-background-fixed = false;
# blur-background-exclude = [
#     "window_type = 'dock'",
#     "window_type = 'desktop'"
# ];

# -- Fading --------------------------------------------------------------------

# Fade windows during opacity changes.
fading = false;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta-time = 4;

# Do not fade on window open/close.
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];

# -- Other ---------------------------------------------------------------------

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;

# Mark windows that have no WM frame as active.
mark-ovredir-focused = true;

# Use _NET_WM_ACTIVE_WINDOW on the root window to determine which
# window is focused instead of using FocusIn/Out events.
use-ewmh-active-win = true;

# Try to detect windows with rounded corners and don't consider them shaped windows.
# Affects --shadow-ignore-shaped, --unredir-if-possible, and possibly others.
# You need to turn this on manually if you want to match against rounded_corners in conditions.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window
# managers notpassing _NET_WM_OPACITY of client windows to frame windows.
detect-client-opacity = true;

## DEPRECATED
# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR extension.
# refresh-rate = 0;

# Painting on X Composite overlay window. Recommended.
# Removed. Enabled whenever possible in yshui's fork
# paint-on-overlay = true;

# Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
# sw-opti = false;

# Unredirect all windows if a full-screen opaque window is detected, to
# maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = false;

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = [ ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group
# focused at the same time.
detect-transient = true;

# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group
# focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

# -- Window type settings ------------------------------------------------------

wintypes:
{
	tooltip =
	{
		fade = true;
		shadow = false;
		opacity = 0.85;
		focus = true;
	};
	popup_menu =
	{
		opacity = 1;
	};
	dropdown_menu =
	{
		opacity = 1;
	};
	dock =
	{
		shadow = false;
	};
	desktop =
	{
		shadow = false;
	};
};
